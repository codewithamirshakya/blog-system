name: 'Comment management'
description: 'APIs for managing comments'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/comments/{type}/{typeId}'
    metadata:
      groupName: 'Comment management'
      groupDescription: 'APIs for managing comments'
      subgroup: ''
      subgroupDescription: ''
      title: 'List comments for morphic model'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      typeId:
        name: typeId
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: asperiores
      typeId: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/comments/{type}/{typeId}'
    metadata:
      groupName: 'Comment management'
      groupDescription: 'APIs for managing comments'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create comments for morphic model'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      typeId:
        name: typeId
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: perferendis
      typeId: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      body: dolores
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/comments/{id}'
    metadata:
      groupName: 'Comment management'
      groupDescription: 'APIs for managing comments'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update comment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: iusto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: ''
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      body: cum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
