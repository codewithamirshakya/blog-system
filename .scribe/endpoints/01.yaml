name: 'Post management'
description: 'APIs for managing posts'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: 'Post management'
      groupDescription: 'APIs for managing posts'
      subgroup: ''
      subgroupDescription: ''
      title: 'List posts'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer evaDPVk3dE64hafc5Z16gb8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: 'Post management'
      groupDescription: 'APIs for managing posts'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hqihmlchgroxw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: hqihmlchgroxw
      body: mollitia
      category_id: necessitatibus
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1eVkbavZDaE35cd6Ph86gf4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: 'Post management'
      groupDescription: 'APIs for managing posts'
      subgroup: ''
      subgroupDescription: ''
      title: 'Show post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6ZehPg1k8aVD4aE5f3cb6d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/posts/{id}'
    metadata:
      groupName: 'Post management'
      groupDescription: 'APIs for managing posts'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: timnrsnvcu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: timnrsnvcu
      body: earum
      category_id: unde
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 453k6aVg1fceDEhdabZv86P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: 'Post management'
      groupDescription: 'APIs for managing posts'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Df346deaZ5bacvhV6g1EP8k'
    controller: null
    method: null
    route: null
    custom: []
